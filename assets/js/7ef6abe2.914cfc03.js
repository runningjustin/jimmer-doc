"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[9588],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>y});var o=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=o.createContext({}),s=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(r),y=a,d=u["".concat(p,".").concat(y)]||u[y]||c[y]||n;return r?o.createElement(d,i(i({ref:t},m),{},{components:r})):o.createElement(d,i({ref:t},m))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<n;s++)i[s]=r[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},85162:(e,t,r)=>{r.d(t,{Z:()=>i});var o=r(67294),a=r(34334);const n="tabItem_Ymn6";function i(e){let{children:t,hidden:r,className:i}=e;return o.createElement("div",{role:"tabpanel",className:(0,a.Z)(n,i),hidden:r},t)}},65488:(e,t,r)=>{r.d(t,{Z:()=>y});var o=r(83117),a=r(67294),n=r(34334),i=r(72389),l=r(67392),p=r(7094),s=r(12466);const m="tabList__CuJ",c="tabItem_LNqP";function u(e){var t;const{lazy:r,block:i,defaultValue:u,values:y,groupId:d,className:g}=e,k=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=y??k.map((e=>{let{props:{value:t,label:r,attributes:o}}=e;return{value:t,label:r,attributes:o}})),f=(0,l.l)(b,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===u?u:u??(null==(t=k.find((e=>e.props.default)))?void 0:t.props.value)??k[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:N}=(0,p.U)(),[T,R]=(0,a.useState)(v),x=[],{blockElementScrollPositionUntilNextRender:j}=(0,s.o5)();if(null!=d){const e=h[d];null!=e&&e!==T&&b.some((t=>t.value===e))&&R(e)}const w=e=>{const t=e.currentTarget,r=x.indexOf(t),o=b[r].value;o!==T&&(j(t),R(o),null!=d&&N(d,String(o)))},O=e=>{var t;let r=null;switch(e.key){case"ArrowRight":{const t=x.indexOf(e.currentTarget)+1;r=x[t]??x[0];break}case"ArrowLeft":{const t=x.indexOf(e.currentTarget)-1;r=x[t]??x[x.length-1];break}}null==(t=r)||t.focus()};return a.createElement("div",{className:(0,n.Z)("tabs-container",m)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":i},g)},b.map((e=>{let{value:t,label:r,attributes:i}=e;return a.createElement("li",(0,o.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>x.push(e),onKeyDown:O,onFocus:w,onClick:w},i,{className:(0,n.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":T===t})}),r??t)}))),r?(0,a.cloneElement)(k.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function y(e){const t=(0,i.Z)();return a.createElement(u,(0,o.Z)({key:String(t)},e))}},84654:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>y,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var o=r(83117),a=(r(67294),r(3905)),n=r(65488),i=r(85162);const l={sidebar_position:1,title:"Define Repository"},p=void 0,s={unversionedId:"spring/repository/concept",id:"spring/repository/concept",title:"Define Repository",description:"Jimmer integrates spring data and provides a base repository interface for Java and Kotlin users respectively.",source:"@site/docs/spring/repository/concept.mdx",sourceDirName:"spring/repository",slug:"/spring/repository/concept",permalink:"/jimmer-doc/docs/spring/repository/concept",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer-doc/tree/main/docs/spring/repository/concept.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Define Repository"},sidebar:"tutorialSidebar",previous:{title:"Spring Data",permalink:"/jimmer-doc/docs/spring/repository/"},next:{title:"Simple Queries",permalink:"/jimmer-doc/docs/spring/repository/abstract"}},m={},c=[],u={toc:c};function y(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Jimmer integrates spring data and provides a base repository interface for Java and Kotlin users respectively."),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"Java"),(0,a.kt)("td",null,"org.babyfish.jimmer.spring.repository.JRepository<E, ID>")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Kotlin"),(0,a.kt)("td",null,"org.babyfish.jimmer.spring.repository.KRepository<E, ID>"))),(0,a.kt)("p",null,"This interface has two generic parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"E: Entity type "),(0,a.kt)("li",{parentName:"ul"},"ID: Entity ID type")),(0,a.kt)("p",null,"By inheriting this interface, developers can quickly implement various Repository"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"BookStoreRepository"),(0,a.kt)(n.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="BookStoreRepostory.java"',title:'"BookStoreRepostory.java"'},"package com.example.repository;\n\nimport com.example.model.BookStore;\n\nimport org.babyfish.jimmer.spring.repository.JRepository;\n\npublic interface BookRepository extends JRepository<BookStore, Long> {}\n"))),(0,a.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="BookStoreRepostory.kt"',title:'"BookStoreRepostory.kt"'},"package com.example.repository\n\nimport com.example.model.BookStore\n\nimport org.babyfish.jimmer.spring.repository.KRepository\n\ninterface BookRepository : KRepository<BookStore, Long>\n"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"BookRepository"),(0,a.kt)(n.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="BookRepostory.java"',title:'"BookRepostory.java"'},"package com.example.repository;\n\nimport com.example.model.Book;\n\nimport org.babyfish.jimmer.spring.repository.JRepository;\n\npublic interface BookRepository extends JRepository<Book, Long> {}\n"))),(0,a.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="BookRepostory.kt"',title:'"BookRepostory.kt"'},"package com.example.repository\n\nimport com.example.model.Book\n\nimport org.babyfish.jimmer.spring.repository.KRepository\n\ninterface BookRepository : KRepository<Book, Long>\n"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"AuthorRepository"),(0,a.kt)(n.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="AuthorRepostory.java"',title:'"AuthorRepostory.java"'},"package com.example.repository;\n\nimport com.example.model.Auhtor;\n\nimport org.babyfish.jimmer.spring.repository.JRepository;\n\npublic interface AuthorRepository extends JRepository<Author, Long> {}\n"))),(0,a.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="AuthorRepostory.kt"',title:'"AuthorRepostory.kt"'},"package com.example.repository\n\nimport com.example.model.Author\n\nimport org.babyfish.jimmer.spring.repository.KRepository\n\ninterface AuthorRepository : KRepository<Author, Long>\n"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"TreeNodeRepository"),(0,a.kt)(n.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="TreeNodeRepostory.java"',title:'"TreeNodeRepostory.java"'},"package com.example.repository;\n\nimport com.example.model.TreeNode;\n\nimport org.babyfish.jimmer.spring.repository.JRepository;\n\npublic interface TreeNodeRepository extends JRepository<TreeNode, Long> {}\n"))),(0,a.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="TreeNodeRepostory.kt"',title:'"TreeNodeRepostory.kt"'},"package com.example.repository\n\nimport com.example.model.TreeNode\n\nimport org.babyfish.jimmer.spring.repository.KRepository\n\ninterface TreeNodeRepository : KRepository<TreeNode, Long>\n")))))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The rest is the same as spring-data. Just define the interface and Jimmer will automatically implement these interfaces and register them in Spring. "),(0,a.kt)("p",{parentName:"admonition"},"However, there is one caveat:"),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"By default, the package of the custom Repository must be the same as the package of the SpringBoot main class or its subpackage.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Otherwise, you need to use ",(0,a.kt)("inlineCode",{parentName:"p"},"@org.babyfish.jimmer.spring.repository.EnableJimmerRepositories")," to annotate the SpringBoot main class or other Spring configuration class to explicitly specify the package where the custom Repository interface is located.")))))}y.isMDXComponent=!0}}]);