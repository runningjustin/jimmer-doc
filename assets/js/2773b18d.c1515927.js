"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[8430],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return t?a.createElement(g,o(o({ref:n},c),{},{components:t})):a.createElement(g,o({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(67294),r=t(34334);const i="tabItem_Ymn6";function o(e){let{children:n,hidden:t,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:t},n)}},65488:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(83117),r=t(67294),i=t(34334),o=t(72389),l=t(67392),s=t(7094),p=t(12466);const c="tabList__CuJ",u="tabItem_LNqP";function d(e){var n;const{lazy:t,block:o,defaultValue:d,values:m,groupId:g,className:h}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=m??f.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),y=(0,l.l)(b,((e,n)=>e.value===n.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===d?d:d??(null==(n=f.find((e=>e.props.default)))?void 0:n.props.value)??f[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:w}=(0,s.U)(),[N,P]=(0,r.useState)(v),j=[],{blockElementScrollPositionUntilNextRender:x}=(0,p.o5)();if(null!=g){const e=k[g];null!=e&&e!==N&&b.some((n=>n.value===e))&&P(e)}const T=e=>{const n=e.currentTarget,t=j.indexOf(n),a=b[t].value;a!==N&&(x(n),P(a),null!=g&&w(g,String(a)))},O=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{const n=j.indexOf(e.currentTarget)+1;t=j[n]??j[0];break}case"ArrowLeft":{const n=j.indexOf(e.currentTarget)-1;t=j[n]??j[j.length-1];break}}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":o},h)},b.map((e=>{let{value:n,label:t,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===n?0:-1,"aria-selected":N===n,key:n,ref:e=>j.push(e),onKeyDown:O,onFocus:T,onClick:T},o,{className:(0,i.Z)("tabs__item",u,null==o?void 0:o.className,{"tabs__item--active":N===n})}),t??n)}))),t?(0,r.cloneElement)(f.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==N})))))}function m(e){const n=(0,o.Z)();return r.createElement(d,(0,a.Z)({key:String(n)},e))}},32235:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var a=t(83117),r=(t(67294),t(3905)),i=t(65488),o=t(85162);const l={sidebar_position:6,title:"6. Paging Query"},s=void 0,p={unversionedId:"showcase/page",id:"showcase/page",title:"6. Paging Query",description:"Two types of Page objects",source:"@site/docs/showcase/page.mdx",sourceDirName:"showcase",slug:"/showcase/page",permalink:"/jimmer-doc/docs/showcase/page",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer-doc/tree/main/docs/showcase/page.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"6. Paging Query"},sidebar:"tutorialSidebar",previous:{title:"5.2 Dynamic Sorting",permalink:"/jimmer-doc/docs/showcase/order-by/dynamic"},next:{title:"7. Comprehensive Query",permalink:"/jimmer-doc/docs/showcase/comprehensive-query"}},c={},u=[{value:"Two types of Page objects",id:"two-types-of-page-objects",level:2},{value:"Using the page of Jimmer",id:"using-the-page-of-jimmer",level:2},{value:"Using the page of Spring Data",id:"using-the-page-of-spring-data",level:2}],d={toc:u};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"two-types-of-page-objects"},"Two types of Page objects"),(0,r.kt)("p",null,"Jimmer supports built-in Page objects"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"org.babyfish.jimmer.Page<T>"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"org.springframework.data.domain.Page<T>")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"In fact, Jimmer allows users to customize any ",(0,r.kt)("inlineCode",{parentName:"p"},"Page")," object.\nHowever, this article does not discuss this issue, partly because this article is only a showcase page and does not want to go into depth, and on the other hand, these two built-in ",(0,r.kt)("inlineCode",{parentName:"p"},"Page")," objects are usually sufficient.")),(0,r.kt)("p",null,"As far as these two built-in Page objects are concerned, the differences are as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"org.springframework.data.domain.Page<T>"),":\nDesigned for server-side pages, in order for the page to remain in its previous state after refresh, a lot of information (such as cumbersome sorting information) needs to be returned to the client as is, so it is very complex.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"org.babyfish.jimmer.Page<T>"),":\nFor the design of rich client pages, this kind of client page itself is a stateful application, and the server side provide pure data services, and only return the most necessary information, so it is very simple."))),(0,r.kt)("h2",{id:"using-the-page-of-jimmer"},"Using the page of Jimmer"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"int pageIndex = ...Omitted...; // \u4ece0\u5f00\u59cb\nint pageSize = ...Omitted...;\n\nBookTable table = BookTable.$;\norg.babyfish.jimmer.Page<Book> page = sqlClient\n    .createQuery(table)\n    .orderBy(table.name().asc())\n    .orderBy(table.edition().desc())\n    .select(table)\n    // highlight-next-line\n    .fetchPage(pageIndex, pageSize);\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"val pageIndex: Int = ...Omitted...; // Starts from 0\nval pageSize: Int = ...Omitted...;\n\nval page: org.babyfish.jimmer.Page<Book> = sqlClient\n    .createQuery(Book::class) {\n        orderBy(table.name.asc())\n        orderBy(table.edition().desc())\n        select(table)\n    }\n    // highlight-next-line\n    .fetchPage(pageIndex, pageSize)\n")))),(0,r.kt)("p",null,"If pageIndex is 1 ",(0,r.kt)("em",{parentName:"p"}," (page 2) ")," and pageSize is 5, the result is"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'Page{\n    // highlight-next-line\n    rows=[\n        {\n            "id":10,\n            "name":"GraphQL in Action",\n            "edition":1,\n            "price":82.00,\n            "store":{"id":2}\n        }, \n        {\n            "id":3,\n            "name":"Learning GraphQL",\n            "edition":3,\n            "price":51.00,\n            "store":{"id":1}\n        }, \n        {\n            "id":2,\n            "name":"Learning GraphQL",\n            "edition":2,\n            "price":55.00,\n            "store":{"id":1}\n        }, \n        {\n            "id":1,\n            "name":"Learning GraphQL",\n            "edition":1,\n            "price":50.00,\n            "store":{"id":1}\n        }, \n        {\n            "id":9,\n            "name":"Programming TypeScript",\n            "edition":3,\n            "price":48.00,\n            "store":{"id":1}\n        }\n    ], \n    // highlight-next-line\n    totalRowCount=12, \n    // highlight-next-line\n    totalPageCount=3\n}\n')),(0,r.kt)("h2",{id:"using-the-page-of-spring-data"},"Using the page of Spring Data"),(0,r.kt)("p",null,"After importing the dependency 'org.babyfish.jimmer:jimmer-spring-boot-starter:$version'"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Usage supported by both Java and Kotlin: Use ",(0,r.kt)("inlineCode",{parentName:"p"},"SpringPageFactory.getInstance()")," as the third argument to ",(0,r.kt)("inlineCode",{parentName:"p"},"fetchPage"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Kotlin-specific usage: Directly call the extension function ",(0,r.kt)("inlineCode",{parentName:"p"},"fetchSpringPage"),"."))),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"int pageIndex = ...Omitted...; // \u4ece0\u5f00\u59cb\nint pageSize = ...Omitted...;\n\nBookTable table = BookTable.$;\norg.springframework.data.domain.Page<Book> page = sqlClient\n    .createQuery(table)\n    .orderBy(table.name().asc())\n    .orderBy(table.edition().desc())\n    .select(table)\n    .fetchPage(\n        pageIndex, \n        pageSize,\n        // highlight-next-line \n        SpringPageFactory.getInstance()\n    );\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"val pageIndex: Int = ...Omitted...; // Starts from 0\nval pageSize: Int = ...Omitted...;\n\nval page: org.springframework.data.domain.Page<Book> = sqlClient\n    .createQuery(Book::class) {\n        orderBy(table.name.asc())\n        orderBy(table.edition().desc())\n        select(table)\n    }\n    // highlight-next-line\n    .fetchSpringPage(\n        pageIndex, \n        pageSize\n    )\n")))),(0,r.kt)("p",null,"If pageIndex is 1 ",(0,r.kt)("em",{parentName:"p"}," (page 2) ")," and pageSize is 5, the result is"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    // highlight-next-line\n    "content":[\n        {\n            "id":10,\n            "name":"GraphQL in Action",\n            "edition":1,\n            "price":82,\n            "store":{"id":2}\n        },\n        {\n            "id":3,\n            "name":"Learning GraphQL",\n            "edition":3,\n            "price":51,\n            "store":{"id":1}\n        },\n        {\n            "id":2,\n            "name":"Learning GraphQL",\n            "edition":2,\n            "price":55,\n            "store":{"id":1}\n        },\n        {\n            "id":1,\n            "name":"Learning GraphQL",\n            "edition":1,\n            "price":50,\n            "store":{"id":1}\n        },\n        {\n            "id":9,\n            "name":"Programming TypeScript",\n            "edition":3,\n            "price":48,\n            "store":{"id":1}\n        }\n    ],\n    "pageable":{\n        "sort":{\n            "unsorted":false,\n            "sorted":true,\n            "empty":false\n        },\n        "pageNumber":1,\n        "pageSize":5,\n        "offset":5,\n        "paged":true,\n        "unpaged":false\n    },\n    // highlight-next-line\n    "totalPages":3,\n    // highlight-next-line\n    "totalElements":12,\n    "last":false,\n    "numberOfElements":5,\n    "first":false,\n    "size":5,\n    "number":1,\n    "sort":{\n        "unsorted":false,\n        "sorted":true,\n        "empty":false\n    },\n    "empty":false\n}\n')))}m.isMDXComponent=!0}}]);