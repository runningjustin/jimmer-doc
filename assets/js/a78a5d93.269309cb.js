"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[1848],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=l(r),f=a,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||i;return r?n.createElement(m,o(o({ref:t},s),{},{components:r})):n.createElement(m,o({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},46440:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=r(83117),a=(r(67294),r(3905));const i={sidebar_position:7,title:"Working with Spring Data"},o=void 0,c={unversionedId:"query/object-fetcher/spring-data",id:"query/object-fetcher/spring-data",title:"Working with Spring Data",description:"We have introduced that object fetchers can flexibly control the shape of queried data structures, bringing tremendous flexibility for application development.",source:"@site/docs/query/object-fetcher/spring-data.mdx",sourceDirName:"query/object-fetcher",slug:"/query/object-fetcher/spring-data",permalink:"/jimmer-doc/docs/query/object-fetcher/spring-data",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer-doc/tree/main/docs/query/object-fetcher/spring-data.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Working with Spring Data"},sidebar:"tutorialSidebar",previous:{title:"Querying DTOs",permalink:"/jimmer-doc/docs/query/object-fetcher/dto"},next:{title:"Dynamic Filtering",permalink:"/jimmer-doc/docs/query/dynamic-where"}},p={},l=[],s={toc:l};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"We have introduced that object fetchers can flexibly control the shape of queried data structures, bringing tremendous flexibility for application development."),(0,a.kt)("p",null,"We also know there are two completely equivalent ways to use them:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Directly use object fetchers and return dynamic entity objects")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Use the ",(0,a.kt)("a",{parentName:"p",href:"../../object/view/dto-language"},"DTO language")," to define output DTO shapes, auto-generate related Java/Kotlin types and entity conversion logic, as well as the object fetcher corresponding to the shape."))),(0,a.kt)("p",null,"Jimmer provides a Spring Boot Starter and is integrated with Spring Data. Object fetchers are also integrated into Spring Data. Relevant documentation links:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Directly using object fetchers"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"../../spring/repository/abstract#object-fetchers"},"Use object fetchers in abstract queries"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"../../spring/repository/default#object-fetchers"},"Use object fetchers in complex queries"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"../../client/api"},"@FetchBy annotation to auto-generate strictly typed client code"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Using ",(0,a.kt)("a",{parentName:"p",href:"../../object/view/dto-language"},"DTO language")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"../../spring/repository/dto"},"Query DTO objects with Spring Data")))))}u.isMDXComponent=!0}}]);