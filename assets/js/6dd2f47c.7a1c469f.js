"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[6254],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(67294),a=n(34334);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,i),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>f});var r=n(83117),a=n(67294),o=n(34334),i=n(72389),l=n(67392),s=n(7094),u=n(12466);const c="tabList__CuJ",p="tabItem_LNqP";function d(e){var t;const{lazy:n,block:i,defaultValue:d,values:f,groupId:m,className:h}=e,b=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=f??b.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),v=(0,l.l)(g,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===d?d:d??(null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)??b[0].props.value;if(null!==y&&!g.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:S}=(0,s.U)(),[w,O]=(0,a.useState)(y),j=[],{blockElementScrollPositionUntilNextRender:T}=(0,u.o5)();if(null!=m){const e=k[m];null!=e&&e!==w&&g.some((t=>t.value===e))&&O(e)}const x=e=>{const t=e.currentTarget,n=j.indexOf(t),r=g[n].value;r!==w&&(T(t),O(r),null!=m&&S(m,String(r)))},C=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=j.indexOf(e.currentTarget)+1;n=j[t]??j[0];break}case"ArrowLeft":{const t=j.indexOf(e.currentTarget)-1;n=j[t]??j[j.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":i},h)},g.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>j.push(e),onKeyDown:C,onFocus:x,onClick:x},i,{className:(0,o.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":w===t})}),n??t)}))),n?(0,a.cloneElement)(b.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function f(e){const t=(0,i.Z)();return a.createElement(d,(0,r.Z)({key:String(t)},e))}},57956:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var r=n(83117),a=(n(67294),n(3905)),o=n(65488),i=n(85162);const l={sidebar_position:3,title:"Batch Control"},s=void 0,u={unversionedId:"configuration/batch-size",id:"configuration/batch-size",title:"Batch Control",description:"SqlClient supports two configurations: DefaultBatchSize and DefaultListBatchSize. If not configured, the default values are 128 and 16.",source:"@site/docs/configuration/batch-size.mdx",sourceDirName:"configuration",slug:"/configuration/batch-size",permalink:"/jimmer-doc/docs/configuration/batch-size",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer-doc/tree/main/docs/configuration/batch-size.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Batch Control"},sidebar:"tutorialSidebar",previous:{title:"Connection Manager",permalink:"/jimmer-doc/docs/configuration/connection-manager"},next:{title:"SQL Log",permalink:"/jimmer-doc/docs/configuration/sql-log"}},c={},p=[{value:"Use Spring Boot Starter",id:"use-spring-boot-starter",level:2},{value:"Don&#39;t use Spring Boot Starter",id:"dont-use-spring-boot-starter",level:2}],d={toc:p};function f(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"SqlClient supports two configurations: ",(0,a.kt)("inlineCode",{parentName:"p"},"DefaultBatchSize")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"DefaultListBatchSize"),". If not configured, the default values are 128 and 16."),(0,a.kt)("p",null,"These two configurations provide default values for the batchSize in ",(0,a.kt)("a",{parentName:"p",href:"../query/object-fetcher/"},"Object Fetcher"),".\nTheir effects have been described in detail in ",(0,a.kt)("a",{parentName:"p",href:"../query/object-fetcher/"},"Object Fetcher"),", so this article only explains the configuration without repeating the explanation of their effects."),(0,a.kt)("p",null,"There are two ways to set these configurations: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use Spring Boot Starter"),(0,a.kt)("li",{parentName:"ul"},"Don't use Spring Boot Starter")),(0,a.kt)("h2",{id:"use-spring-boot-starter"},"Use Spring Boot Starter"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"jimmer:\n  default-batch-size: 256\n  default-list-batch-size: 32\n")),(0,a.kt)("h2",{id:"dont-use-spring-boot-starter"},"Don't use Spring Boot Starter"),(0,a.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"@Bean\npublic JSqlClient sqlClient() {\n  return JSqlClient\n    .newBuilder()\n    .setConnectionManager(...)\n    .setDialect(new H2Dialect()) \n    .setExecutor(...)\n    .addScalarProvider(...)\n    // highlight-next-line  \n    .setDefaultBatchSize(256)\n    // highlight-next-line\n    .setDefaultListBatchSize(32)\n    .build();\n} \n"))),(0,a.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Bean  \nfun sqlClient(): KSqlClient =\n  newKSqlClient {\n    setConnectionManager { ... }\n    setDialect(H2Dialect())\n    setExecutor { ... }\n    addScalarProvider { ... }\n    // highlight-next-line\n    setDefaultBatchSize(256) \n    // highlight-next-line\n    setDefaultListBatchSize(32)\n  }\n")))))}f.isMDXComponent=!0}}]);