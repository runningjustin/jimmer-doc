"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[4237],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,d=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=s(n),c=a,g=m["".concat(d,".").concat(c)]||m[c]||u[c]||l;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(67294),a=n(34334);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,o),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(83117),a=n(67294),l=n(34334),o=n(72389),i=n(67392),d=n(7094),s=n(12466);const p="tabList__CuJ",u="tabItem_LNqP";function m(e){var t;const{lazy:n,block:o,defaultValue:m,values:c,groupId:g,className:b}=e,k=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=c??k.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),v=(0,i.l)(f,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===m?m:m??(null==(t=k.find((e=>e.props.default)))?void 0:t.props.value)??k[0].props.value;if(null!==h&&!f.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:N}=(0,d.U)(),[j,w]=(0,a.useState)(h),T=[],{blockElementScrollPositionUntilNextRender:I}=(0,s.o5)();if(null!=g){const e=y[g];null!=e&&e!==j&&f.some((t=>t.value===e))&&w(e)}const x=e=>{const t=e.currentTarget,n=T.indexOf(t),r=f[n].value;r!==j&&(I(t),w(r),null!=g&&N(g,String(r)))},O=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,l.Z)("tabs-container",p)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":o},b)},f.map((e=>{let{value:t,label:n,attributes:o}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:j===t?0:-1,"aria-selected":j===t,key:t,ref:e=>T.push(e),onKeyDown:O,onFocus:x,onClick:x},o,{className:(0,l.Z)("tabs__item",u,null==o?void 0:o.className,{"tabs__item--active":j===t})}),n??t)}))),n?(0,a.cloneElement)(k.filter((e=>e.props.value===j))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==j})))))}function c(e){const t=(0,o.Z)();return a.createElement(m,(0,r.Z)({key:String(t)},e))}},3899:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=n(83117),a=(n(67294),n(3905)),l=n(65488),o=n(85162);const i={sidebar_position:1,title:"Create a Project"},d=void 0,s={unversionedId:"overview/get-started/create-project",id:"overview/get-started/create-project",title:"Create a Project",description:"Create a Spring Boot Project",source:"@site/docs/overview/get-started/create-project.mdx",sourceDirName:"overview/get-started",slug:"/overview/get-started/create-project",permalink:"/jimmer-doc/docs/overview/get-started/create-project",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer-doc/tree/main/docs/overview/get-started/create-project.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Create a Project"},sidebar:"tutorialSidebar",previous:{title:"Get Started",permalink:"/jimmer-doc/docs/overview/get-started/"},next:{title:"Create Database",permalink:"/jimmer-doc/docs/overview/get-started/create-database"}},p={},u=[{value:"Create a Spring Boot Project",id:"create-a-spring-boot-project",level:2},{value:"Add Dependencies",id:"add-dependencies",level:2},{value:"Additional Configuration Needed for Kotlin",id:"additional-configuration-needed-for-kotlin",level:2},{value:"Other Useful Configurations",id:"other-useful-configurations",level:2},{value:"Add Other Required Dependencies",id:"add-other-required-dependencies",level:2}],m={toc:u};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"create-a-spring-boot-project"},"Create a Spring Boot Project"),(0,a.kt)("p",null,"Use ",(0,a.kt)("a",{parentName:"p",href:"https://start.spring.io/"},"https://start.spring.io/")," to create a Spring Boot project. You need to choose your preferred language - Java or Kotlin. "),(0,a.kt)("p",null,"The choice of language is important because Jimmer supports two different sets of APIs."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Java API - Ensures maximum developer usage")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Kotlin API - APIs designed specifically for Kotlin to optimize the development experience  "))),(0,a.kt)("h2",{id:"add-dependencies"},"Add Dependencies"),(0,a.kt)("p",null,"Jimmer itself is highly neutral and can be used without Spring Boot. But it also provides great integration with Spring Boot."),(0,a.kt)("p",null,"Users can choose to use it with or without Spring Boot. Different choices require adding different dependencies."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"groupId:\norg.babyfish.jimmer")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"artifactId:"),(0,a.kt)("table",null,(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",null),(0,a.kt)("th",null,"Integrate with Spring Boot"),(0,a.kt)("th",null,"Standalone Usage"))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"Java"),(0,a.kt)("td",{rowspan:"2"},"jimmer-spring-boot-starter"),(0,a.kt)("td",null,"jimmer-sql")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"Kotlin"),(0,a.kt)("td",null,"jimmer-sql-kotlin")))))),(0,a.kt)("p",null,"Compared to standalone usage, integrating with Spring Boot is simpler. So this tutorial will demonstrate the latter."),(0,a.kt)("p",null,"Modify build.gradle or pom.xml to add dependencies:"),(0,a.kt)(l.Z,{groupId:"buildTool",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"maven",label:"Maven",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="pom.xml"',title:'"pom.xml"'},"<properties>\n  <jimmer.version>0.8.94</jimmer.version>\n</properties>\n\n<dependencies>\n  <dependency>\n      <groupId>org.babyfish.jimmer</groupId>\n      <artifactId>jimmer-spring-boot-starter</artifactId>\n      <version>${jimmer.version}</version>\n  </dependency>\n  ...other dependencies omitted...  \n</dependencies>\n"))),(0,a.kt)(o.Z,{value:"gradle",label:"Gradle",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},"ext {\n  jimmerVersion = '0.8.94' \n}\n\ndependencies {\n\n  implementation \"org.babyfish.jimmer:jimmer-spring-boot-starter:${jimmerVersion}\"\n\n  ...other dependencies omitted...\n}\n"))),(0,a.kt)(o.Z,{value:"gradlekts",label:"Gradle (Kotlin)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'val jimmerVersion = "0.8.94"\n\ndependencies {\n\n  implementation("org.babyfish.jimmer:jimmer-spring-boot-starter:${jimmerVersion}")  \n\n  ...other dependencies omitted...\n}\n')))),(0,a.kt)("h2",{id:"additional-configuration-needed-for-kotlin"},"Additional Configuration Needed for Kotlin"),(0,a.kt)("p",null,"If using Kotlin, you must modify the Spring Boot configuration file - this is very important."),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Kotlin projects must configure ",(0,a.kt)("inlineCode",{parentName:"p"},"jimmer.language")," ")),(0,a.kt)(l.Z,{groupId:"springBoot",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"properties",label:"application.properties",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"jimmer.language = kotlin\n"))),(0,a.kt)(o.Z,{value:"yaml",label:"application.yml",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"jimmer:\n  language: kotlin\n")))),(0,a.kt)("h2",{id:"other-useful-configurations"},"Other Useful Configurations"),(0,a.kt)("p",null,"In addition to the required ",(0,a.kt)("inlineCode",{parentName:"p"},"jimmer.language")," for Kotlin projects, there are other useful configurations. "),(0,a.kt)("p",null,"Here are a few basic configurations that work for both Java and Kotlin:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"jimmer.dialect"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"org.babyfish.jimmer.sql.dialect.DefaultDialect"),(0,a.kt)("td",{parentName:"tr",align:null},"Database dialect class name")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"jimmer.show-sql"),(0,a.kt)("td",{parentName:"tr",align:null},"boolean"),(0,a.kt)("td",{parentName:"tr",align:null},"false"),(0,a.kt)("td",{parentName:"tr",align:null},"Print executed SQL if true")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"jimmer.pretty-sql"),(0,a.kt)("td",{parentName:"tr",align:null},"boolean"),(0,a.kt)("td",{parentName:"tr",align:null},"false"),(0,a.kt)("td",{parentName:"tr",align:null},"Ensure that the printed SQL is well-formatted ",(0,a.kt)("em",{parentName:"td"},"(compact by default)"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"jimmer.database-validation-mode"),(0,a.kt)("td",{parentName:"tr",align:null},"NONE","|","WARNING","|","ERROR"),(0,a.kt)("td",{parentName:"tr",align:null},"NONE"),(0,a.kt)("td",{parentName:"tr",align:null},"Validate consistency between database schema and entity types. WARNING logs inconsistencies, ERROR throws errors.")))),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"../../spring/appendix"},"Spring/Appendix")," for complete documentation on configurations."),(0,a.kt)(l.Z,{groupId:"springBoot",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"properties",label:"application.properties",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"jimmer.dialect = org.babyfish.jimmer.sql.dialect.MySqlDialect  \njimmer.show-sql = true\njimmer.pretty-sql = true\njimmer.database-validation-mode = ERROR\n...other configurations omitted...\n"))),(0,a.kt)(o.Z,{value:"yaml",label:"application.yml",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"jimmer:\n  dialect: org.babyfish.jimmer.sql.dialect.MySqlDialect\n  show-sql: true\n  pretty-sql: true\n  database-validation-mode: ERROR\n  ...other configurations omitted...  \n")))),(0,a.kt)("h2",{id:"add-other-required-dependencies"},"Add Other Required Dependencies"),(0,a.kt)("p",null,"In addition to Jimmer, some other dependencies are required like spring-web, JDBC driver, etc."),(0,a.kt)("p",null,"Modify build.gradle or pom.xml to add dependencies:"),(0,a.kt)(l.Z,{groupId:"buildTool",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"maven",label:"Maven",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependencies>\n\n  <dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n  </dependency>\n\n  <dependency>\n    <groupId>mysql</groupId>\n    <artifactId>mysql-connector-java</artifactId>\n    <version>8.0.30</version>\n    <scope>runtime</scope>\n  </dependency>\n\n  ...other dependencies omitted...\n</dependencies>\n"))),(0,a.kt)(o.Z,{value:"gradle",label:"Gradle",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},"dependencies {\n\n  implementation 'org.springframework.boot:spring-boot-starter-web'\n  runtimeOnly 'mysql:mysql-connector-java:8.0.30'\n\n  ...other dependencies omitted...\n}\n"))),(0,a.kt)(o.Z,{value:"gradlekts",label:"Gradle (Kotlin)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'dependencies {\n\n  implementation("org.springframework.boot:spring-boot-starter-web")\n  runtimeOnly("mysql:mysql-connector-java:8.0.30")  \n\n  ...other dependencies omitted...\n}\n')))))}c.isMDXComponent=!0}}]);