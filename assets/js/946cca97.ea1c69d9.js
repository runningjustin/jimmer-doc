"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[5727],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(r),m=i,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(f,o(o({ref:t},l),{},{components:r})):n.createElement(f,o({ref:t},l))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},26107:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var n=r(83117),i=(r(67294),r(3905));const a={sidebar_position:2,title:"1. Query Arbitrary Shape"},o=void 0,c={unversionedId:"quick-view/fetch/index",id:"quick-view/fetch/index",title:"1. Query Arbitrary Shape",description:"Basic Concepts",source:"@site/docs/quick-view/fetch/index.mdx",sourceDirName:"quick-view/fetch",slug:"/quick-view/fetch/",permalink:"/jimmer-doc/docs/quick-view/fetch/",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer-doc/tree/main/docs/quick-view/fetch/index.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"1. Query Arbitrary Shape"},sidebar:"tutorialSidebar",previous:{title:"Precondition",permalink:"/jimmer-doc/docs/quick-view/precondition"},next:{title:"Feature Introduction",permalink:"/jimmer-doc/docs/quick-view/fetch/feature"}},p={},s=[{value:"Basic Concepts",id:"basic-concepts",level:2},{value:"Demo",id:"demo",level:2}],l=(u="ObjectFetcherPanel",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var u;const d={toc:s};function m(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"basic-concepts"},"Basic Concepts"),(0,i.kt)("p",null,"Although Jimmer entities are strongly typed, they are also dynamic and can express the ever-changing shape of data structures. "),(0,i.kt)("p",null,"Therefore, Jimmer supports ",(0,i.kt)("inlineCode",{parentName:"p"},"ObjectFetcher"),", which can control the shape of the queried data structure and then uniformly return Jimmer entities. "),(0,i.kt)("admonition",{title:"This is an extremely similar concept to GraphQL, but there are huge differences:",type:"tip"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"GraphQL is an application layer protocol based on HTTP that can only expose this capability by building HTTP services, and only HTTP clients can enjoy this capability. ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For Jimmer, the ability to query arbitrary shapes is an inherent behavior of ORM that can be used programmed anywhere."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"You can use it to expose ",(0,i.kt)("a",{parentName:"p",href:"../../graphql"},"GraphQL services"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As shown in the content of this section, you can also expose REST services.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"It can even be used within applications without crossing any remote boundaries.")))))),(0,i.kt)("h2",{id:"demo"},"Demo"),(0,i.kt)(l,{mdxType:"ObjectFetcherPanel"}))}m.isMDXComponent=!0}}]);