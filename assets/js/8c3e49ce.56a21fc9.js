"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[3313],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||r;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),i=n(34334);const r="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,o),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(83117),i=n(67294),r=n(34334),o=n(72389),l=n(67392),s=n(7094),p=n(12466);const u="tabList__CuJ",c="tabItem_LNqP";function m(e){var t;const{lazy:n,block:o,defaultValue:m,values:d,groupId:f,className:g}=e,h=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=d??h.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),v=(0,l.l)(b,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===m?m:m??(null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)??h[0].props.value;if(null!==k&&!b.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:N}=(0,s.U)(),[O,_]=(0,i.useState)(k),T=[],{blockElementScrollPositionUntilNextRender:E}=(0,p.o5)();if(null!=f){const e=y[f];null!=e&&e!==O&&b.some((t=>t.value===e))&&_(e)}const w=e=>{const t=e.currentTarget,n=T.indexOf(t),a=b[n].value;a!==O&&(E(t),_(a),null!=f&&N(f,String(a)))},q=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,r.Z)("tabs-container",u)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":o},g)},b.map((e=>{let{value:t,label:n,attributes:o}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:e=>T.push(e),onKeyDown:q,onFocus:w,onClick:w},o,{className:(0,r.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":O===t})}),n??t)}))),n?(0,i.cloneElement)(h.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==O})))))}function d(e){const t=(0,o.Z)();return i.createElement(m,(0,a.Z)({key:String(t)},e))}},86681:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var a=n(83117),i=(n(67294),n(3905)),r=n(65488),o=n(85162);const l={sidebar_position:4,title:"Deep Pagination Optimization"},s=void 0,p={unversionedId:"query/paging/deep-optimization",id:"query/paging/deep-optimization",title:"Deep Pagination Optimization",description:"Pagination queries have a problem - when the data volume is large, if the pagination range is too far back (i.e. offset is too large), performance issues can occur.",source:"@site/docs/query/paging/deep-optimization.mdx",sourceDirName:"query/paging",slug:"/query/paging/deep-optimization",permalink:"/jimmer-doc/docs/query/paging/deep-optimization",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer-doc/tree/main/docs/query/paging/deep-optimization.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Deep Pagination Optimization"},sidebar:"tutorialSidebar",previous:{title:"Reverse Sorting Optimization",permalink:"/jimmer-doc/docs/query/paging/reverse-sorting"},next:{title:"DSL Expressions",permalink:"/jimmer-doc/docs/query/expression"}},u={},c=[{value:"Set Threshold",id:"set-threshold",level:2},{value:"Effectiveness",id:"effectiveness",level:2},{value:"Set to 0",id:"set-to-0",level:2}],m={toc:c};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Pagination queries have a problem - when the data volume is large, if the pagination range is too far back (i.e. offset is too large), performance issues can occur."),(0,i.kt)("p",null,"Therefore, Jimmer supports deep pagination optimization. Set a threshold ",(0,i.kt)("inlineCode",{parentName:"p"},"offset-optimizing-threshold")," for the pagination offset. Once the offset reaches this threshold, the implementation of the pagination query is changed."),(0,i.kt)("h2",{id:"set-threshold"},"Set Threshold"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Using Spring Boot Starter:  "),(0,i.kt)("p",{parentName:"li"},"Modify ",(0,i.kt)("inlineCode",{parentName:"p"},"application.yml")," ",(0,i.kt)("em",{parentName:"p"},"(or application.properties)"),", add config item ",(0,i.kt)("inlineCode",{parentName:"p"},"offset-optimizing-threshold"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"jimmer:\n    offset-optimizing-threshold: 1000\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Using low-level API:"),(0,i.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},"JSqlClient sqlClient = JSqlClient\n    .newBuilder()\n    .setOffsetOptimizingThreshold(1000)  \n    ...Other config omitted...\n    .build();\n"))),(0,i.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"val sqlClient = newKSqlClient {\n    setOffsetOptimizingThreshold(1000)\n    ...Other config omitted...\n}\n")))))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"If this threshold is not set, the default is ",(0,i.kt)("inlineCode",{parentName:"p"},"Integer.MAX_VALUE"),", meaning this feature is disabled. ")),(0,i.kt)("h2",{id:"effectiveness"},"Effectiveness"),(0,i.kt)("p",null,"To discuss this feature, focusing on the data query instead of the count query is sufficient. Let's look at this simple pagination query:"),(0,i.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public List<Book> findBooks(int limit, int offset) {\n    BookTable table = Tables.BOOK_TABLE;\n    return sqlClient\n            .createQuery(table)\n            .select(table)\n            .limit(limit, offset) \n            .execute();  \n}\n"))),(0,i.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"fun findBooks(limit: Int, offset: Int): List<Book> =\n    sqlClient.createQuery(Book::class) {\n        select(table)\n    }\n    .limit(limit, offset)\n    .execute()\n")))),(0,i.kt)("p",null,"Pagination query support differs for different dialects. Oracle is more complex. See ",(0,i.kt)("a",{parentName:"p",href:"./usage#dialects"},"Pagination/Usage#Dialects"),"."),(0,i.kt)("p",null,"To simplify discussion, assume using ",(0,i.kt)("inlineCode",{parentName:"p"},"org.babyfish.jimmer.sql.H2Dialect"),". Pagination queries under it generate simple SQL:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When offset is less than 1000, e.g. calling ",(0,i.kt)("inlineCode",{parentName:"p"},"findBooks(10, 90)"),", the generated SQL:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"select\n    tb_1_.ID,\n    tb_1_.NAME, \n    tb_1_.EDITION,\n    tb_1_.PRICE,\n    tb_1_.STORE_ID\nfrom BOOK tb_1_  \nlimit ? /* 10 */ offset ? /* 90 */\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When offset is greater than or equal to 1000, e.g. calling ",(0,i.kt)("inlineCode",{parentName:"p"},"findBooks(10, 1000)"),", the generated SQL: "),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"select\n    optimize_.ID,\n    optimize_.NAME,\n    optimize_.EDITION,\n    optimize_.PRICE,\n    optimize_.STORE_ID\nfrom (\n    select\n        tb_1_.ID optimize_core_id_  \n    from BOOK tb_1_\n    limit ? /* 10 */ offset ? /* 1000 */ \n) optimize_core_ inner join BOOK optimize_\n    on optimize_.ID = optimize_core_.optimize_core_id_\n")))),(0,i.kt)("p",null,"As you can see, when offset is too large, Jimmer queries ids of the page first, then converts the ids to objects. This is useful when data volume is large."),(0,i.kt)("h2",{id:"set-to-0"},"Set to 0"),(0,i.kt)("p",null,"For some databases (e.g. MySQL), if data volume is large, performance is poor even when querying the first page (offset is 0). "),(0,i.kt)("p",null,"In this case, simply set ",(0,i.kt)("inlineCode",{parentName:"p"},"offset-optimizing-threshold")," to 0 directly."))}d.isMDXComponent=!0}}]);