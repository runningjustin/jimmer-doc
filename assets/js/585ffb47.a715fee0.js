"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[6176],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return t?a.createElement(b,l(l({ref:n},u),{},{components:t})):a.createElement(b,l({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=p;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(67294),r=t(34334);const o="tabItem_Ymn6";function l(e){let{children:n,hidden:t,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:t},n)}},65488:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(83117),r=t(67294),o=t(34334),l=t(72389),i=t(67392),s=t(7094),c=t(12466);const u="tabList__CuJ",d="tabItem_LNqP";function p(e){var n;const{lazy:t,block:l,defaultValue:p,values:m,groupId:b,className:h}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=m??f.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),y=(0,i.l)(k,((e,n)=>e.value===n.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===p?p:p??(null==(n=f.find((e=>e.props.default)))?void 0:n.props.value)??f[0].props.value;if(null!==v&&!k.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:N}=(0,s.U)(),[w,T]=(0,r.useState)(v),S=[],{blockElementScrollPositionUntilNextRender:O}=(0,c.o5)();if(null!=b){const e=g[b];null!=e&&e!==w&&k.some((n=>n.value===e))&&T(e)}const E=e=>{const n=e.currentTarget,t=S.indexOf(n),a=k[t].value;a!==w&&(O(n),T(a),null!=b&&N(b,String(a)))},j=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{const n=S.indexOf(e.currentTarget)+1;t=S[n]??S[0];break}case"ArrowLeft":{const n=S.indexOf(e.currentTarget)-1;t=S[n]??S[S.length-1];break}}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":l},h)},k.map((e=>{let{value:n,label:t,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===n?0:-1,"aria-selected":w===n,key:n,ref:e=>S.push(e),onKeyDown:j,onFocus:E,onClick:E},l,{className:(0,o.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":w===n})}),t??n)}))),t?(0,r.cloneElement)(f.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==w})))))}function m(e){const n=(0,l.Z)();return r.createElement(p,(0,a.Z)({key:String(n)},e))}},22125:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var a=t(83117),r=(t(67294),t(3905)),o=t(65488),l=t(85162);const i={sidebar_position:3,title:"2.3 Deeper Association"},s=void 0,c={unversionedId:"showcase/fetch-association/deeper-association",id:"showcase/fetch-association/deeper-association",title:"2.3 Deeper Association",description:"Query Dynamic Entities",source:"@site/docs/showcase/fetch-association/deeper-association.mdx",sourceDirName:"showcase/fetch-association",slug:"/showcase/fetch-association/deeper-association",permalink:"/jimmer-doc/docs/showcase/fetch-association/deeper-association",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer-doc/tree/main/docs/showcase/fetch-association/deeper-association.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"2.3 Deeper Association"},sidebar:"tutorialSidebar",previous:{title:"2.4 Associated Id",permalink:"/jimmer-doc/docs/showcase/fetch-association/associated-id"},next:{title:"3. Recursive Query",permalink:"/jimmer-doc/docs/showcase/recursive-query/"}},u={},d=[{value:"Query Dynamic Entities",id:"query-dynamic-entities",level:2},{value:"Query Static DTO",id:"query-static-dto",level:2}],p={toc:d};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"query-dynamic-entities"},"Query Dynamic Entities"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookStoreTable table = BookStoreTable.$;\n\nList<BookStore> stores = sqlClient\n    .createQuery(table)\n    .where(table.name().eq("MANNING"))\n    .select(\n        table.fetch(\n            BookStoreFetcher.$\n                .allScalarFields()\n                .books( \u2776\n                    BookFetcher.$\n                        .allScalarFields()\n                        .authors( \u2777\n                            AuthorFetcher.$\n                                .allScalarFields()\n                        )\n                )\n        )\n    )\n    .execute();\n'))),(0,r.kt)(l.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val books = sqlClient\n    .createQuery(BookStore::class) {\n        where(table.name  eq "MANNING")\n        select(\n            table.fetchBy {\n                allScalarFields()\n                books { \u2776\n                    allScalarFields()\n                    authors { \u2777\n                        allScalarFields()\n                    }\n                }\n            }\n        )\n    }\n    .execute()\n')))),(0,r.kt)("p",null,"The result is"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "id":2,\n        "name":"MANNING",\n        "website":null,\n        "books":[ \u2776\n            {\n                "id":12,\n                "name":"GraphQL in Action",\n                "edition":3,\n                "price":80,\n                "authors":[ \u2777\n                    {\n                        "id":5,\n                        "firstName":"Samer",\n                        "lastName":"Buna",\n                        "gender":"MALE"\n                    }\n                ]\n            },\n            {\n                "id":11,\n                "name":"GraphQL in Action",\n                "edition":2,\n                "price":81,\n                "authors":[ \u2777\n                    {\n                        "id":5,\n                        "firstName":"Samer",\n                        "lastName":"Buna",\n                        "gender":"MALE"\n                    }\n                ]\n            },\n            {\n                "id":10,\n                "name":"GraphQL in Action",\n                "edition":1,\n                "price":82,\n                "authors":[ \u2777\n                    {\n                        "id":5,\n                        "firstName":"Samer",\n                        "lastName":"Buna",\n                        "gender":"MALE"\n                    }\n                ]\n            }\n        ]\n    }\n]\n')),(0,r.kt)("h2",{id:"query-static-dto"},"Query Static DTO"),(0,r.kt)("p",null,"Create any file with the ",(0,r.kt)("inlineCode",{parentName:"p"},"dto")," extension under the ",(0,r.kt)("inlineCode",{parentName:"p"},"src/main/dto")," folder, and edit the code as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"export com.yourcompany.yourproject.model.BookStore\n    -> package com.yourcompany.yourproject.model.dto\n\nBookStroeView {\n    #allScalars(this)\n    books { \u2776\n        #allScalars(this)\n        authors { \u2777\n            #allScalars(this)\n        }\n    }\n}\n")),(0,r.kt)("p",null,"Compile the project, a java/kotlin class named ",(0,r.kt)("inlineCode",{parentName:"p"},"BookStoreView")," will be automatically generated."),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookStoreTable table = BookStoreTable.$;\n\nList<BookStoreView> stores = sqlClient\n    .createQuery(table)\n    .where(table.name().eq("MANNING"))\n    .select(\n        table.fetch(BookStoreView.class)\n    )\n    .execute();\n'))),(0,r.kt)(l.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val stores = sqlClient\n    .createQuery(BookStore::class) {\n        where(table.name  eq "Learning GraphQL")\n        select(\n            table.fetch(BookStoreView::class)\n        )\n    }\n    .execute()\n')))),(0,r.kt)("p",null,"The result is"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"[\n    BookStoreView(\n        id=2, \n        name=MANNING, \n        website=null, \n        books=[\n            BookStoreView.TargetOf_books(\n                id=12, \n                name=GraphQL in Action, \n                edition=3, \n                price=80.00, \n                authors=[\n                    BookStoreView.TargetOf_books.TargetOf_authors_2(\n                        id=5, \n                        firstName=Samer, \n                        lastName=Buna, \n                        gender=MALE\n                    )\n                ]\n            ), \n            BookStoreView.TargetOf_books(\n                id=11, \n                name=GraphQL in Action, \n                edition=2, \n                price=81.00, \n                authors=[\n                    BookStoreView.TargetOf_books.TargetOf_authors_2(\n                        id=5, \n                        firstName=Samer, \n                        lastName=Buna, \n                        gender=MALE\n                    )\n                ]\n            ), \n            BookStoreView.TargetOf_books(\n                id=10, \n                name=GraphQL in Action, \n                edition=1, \n                price=82.00, \n                authors=[\n                    BookStoreView.TargetOf_books.TargetOf_authors_2(\n                        id=5, \n                        firstName=Samer, \n                        lastName=Buna, \n                        gender=MALE\n                    )\n                ]\n            )\n        ]\n    )\n]\n")))}m.isMDXComponent=!0}}]);